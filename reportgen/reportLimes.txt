1) PROJECT IDENTIFICATION 
1.1 - Name: Limes Workflow Example Project
1.2 - Homepage: (no homepage)
1.3 - Creator: Ivan Ermilov
1.4 - Goal: Exemplifying a Scientific Workflow with Ontology for Linked Data Project using LIMES.
1.5 - Description: This project is part of the use cases to verify the Ontology for Linked Data Projects. 
In a nutshell, the simple task is interlink a set of DBpedia resources, using LIMES. 
This task must be reproduced in an automatized way by using the command lines and their parameters. 


2) WORKFLOW

2.1 - example_Limes_Scientific_Workflow

2.1.1 - Short Description: Workflow applied to create linked dataset of Dbpedia resources and create a graph in a Virtuoso Server.

2.1.2 - Steps


2.1.2.1 - step_interlinking_example_Limes_Scientific_Workflow

Contributor: Ivan Ermilov

Stage: Interlink/Fusing

Performed at: 2014-12-08

Output Dataset: 
dataset_dbpedia_dbpedia_duplicates_nt
 (File format: N-triples Format)
 (Location: /home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/Datasets)
 (License: Creative Commons public domain waiver)

Tool: LIMES

Parameters and parameter's values:

parameter_limes_trigrams : 0.80


Short Description: Limes needs to be installed. It is appreciated to have a bash file to run LIMES with the parameter of a configuration file (see hasScript). In this case, the script is saved in the file “/home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/CommonFiles/dbpedia-dbpedia.xml”. The used command to run this step is described in hasCommand.


Script: <?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2010 rel. 3 sp1 (http://www.altova.com)-->
<!DOCTYPE LIMES SYSTEM "limes.dtd">
<LIMES>
	<PREFIX>
		<NAMESPACE>http://www.w3.org/1999/02/22-rdf-syntax-ns#</NAMESPACE>
		<LABEL>rdf</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://www.w3.org/2000/01/rdf-schema#</NAMESPACE>
		<LABEL>rdfs</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://xmlns.com/foaf/0.1/</NAMESPACE>
		<LABEL>foaf</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://www.w3.org/2002/07/owl#</NAMESPACE>
		<LABEL>owl</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://www4.wiwiss.fu-berlin.de/drugbank/resource/drugbank/</NAMESPACE>
		<LABEL>drugbank</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://www4.wiwiss.fu-berlin.de/sider/resource/sider/</NAMESPACE>
		<LABEL>sider</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://dbpedia.org/ontology/</NAMESPACE>
		<LABEL>dbpedia</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://dbpedia.org/property/</NAMESPACE>
		<LABEL>dbpedia-p</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://purl.org/dc/terms/</NAMESPACE>
		<LABEL>dc</LABEL>
	</PREFIX>
	<PREFIX>
		<NAMESPACE>http://www4.wiwiss.fu-berlin.de/diseasome/resource/diseasome/</NAMESPACE>
		<LABEL>diseasome</LABEL>
	</PREFIX>
	<SOURCE>
		<ID>dbpedia</ID>
		<ENDPOINT>http://dbpedia.org/sparql</ENDPOINT>
		<VAR>?x</VAR>
		<PAGESIZE>1000</PAGESIZE>
		<RESTRICTION>?x rdf:type dbpedia:Drug</RESTRICTION>
		<PROPERTY>rdfs:label AS nolang->lowercase</PROPERTY>
	</SOURCE>
	<TARGET>
		<ID>dbpedia</ID>
		<ENDPOINT>http://dbpedia.org/sparql</ENDPOINT>
		<VAR>?y</VAR>
		<PAGESIZE>1000</PAGESIZE>
		<RESTRICTION>?y rdf:type dbpedia:Drug</RESTRICTION>
		<PROPERTY>rdfs:label AS nolang->lowercase RENAME name</PROPERTY>
	</TARGET>
	<METRIC>trigrams(x.rdfs:label,y.name)</METRIC>
	<ACCEPTANCE>
		<THRESHOLD>0.8</THRESHOLD>
		<FILE>/home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/Datasets/dbpedia_dbpedia_duplicates.nt</FILE>
		<RELATION>owl:sameAs</RELATION>
	</ACCEPTANCE>
	<REVIEW>
		<THRESHOLD>0.5</THRESHOLD>
		<FILE>/home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/Datasets/dbpedia_dbpedia_reviewme.nt</FILE>
		<RELATION>owl:sameAs</RELATION>
	</REVIEW>
	<EXECUTION>Simple</EXECUTION>
	<OUTPUT>NT</OUTPUT>
</LIMES>


Command: /home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/CommonFiles/limes.sh /home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/CommonFiles/dbpedia-dbpedia.xml


2.1.2.2 - step_storing_example_Limes_Scientific_Workflow

Contributor: Ivan Ermilov

Stage: Storage/Querying Stage

Performed at: 201412-08

Input Datasets:

dataset_dbpedia_dbpedia_duplicates_nt
 (File format: N-triples Format)
 (Location: /home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/Datasets)
 (License: Creative Commons public domain waiver)

Tool: Virtuoso RDF Store

Parameters and parameter's values:

parameter_name_destination_graph_iri : http://lod.unicentro.br/DbpediaLimesSample/


Short Description: Use the command line to upload the input dataset (hasInputDataset) to the graph (see hasParameter -> parameter_name_destination_graph_iri). 
The command line is invoking a bash file (see hasScript) to import the resources into the Virtuoso. Before execute this step, be sure about setting the user_name and password in the script file (lines virt_userName=******* and 
virt_passWord=******* ).


Script: #!/bin/bash 
# Script for loading an rdf file into a virtuoso store using 
# virtuoso's isql 
# Usage: sourceFile graphName port userName passWord 
# e.g. <cmd> myfile.n3.bzip2 http://mygraph.org 1115 dba dba 

virt_isql="isql-vt" 
unzip_source=$1 
virt_graphName=$2 
virt_port=1111 
virt_userName=******* 
virt_passWord=******* 
echo "SPARQL CLEAR GRAPH <$2>;" | isql-vt -S "$virt_port" -U "$virt_userName" -P "$virt_passWord" 

unzip_extension=${unzip_source##*.} 
unzip_target=${unzip_source%.*} 

# Phase 1: Unzip 
#echo "Target: $unzip_target, Extension: $unzip_extension" 
if [ $unzip_extension = "bz2" ]; then 
	bzip2 -dk $unzip_source 
elif [ $unzip_extension = "gz" ]; then 
	gzip -d $unzip_source 
elif [ $unzip_extension = "zip" ]; then 
	unzip $unzip_source 
else 
	unzip_target=$unzip_source 
fi 

# Phase 2: Convert to n-triple 
# FIXME Skip this step if the source file is already in n-triples format 
rapper_source=$unzip_target 
rapper_extension=${rapper_source##*.} 
rapper_target="${rapper_source%.*}.nt" 

if [ $rapper_extension != "nt" ]; then 
    rapper_target=`mktemp` 
    rapper_target="$rapper_target.nt" 
    echo "Converting to n-triples. File is $rapper_target" 
    rapper $rapper_source -i guess -o ntriples >> $rapper_target 
fi 

#echo "Unzip target= $unzip_target" 
split_size=$(stat -c%s "$rapper_target") 
echo "Size = $split_size" 

if [ $split_size -gt 5000000 ]; then 
	echo "File is large." 

	# Phase 3: Split 
	split_source=$rapper_target 
	split_dir=`mktemp -d` 
            echo "Performing split on file $split_source" 

	split -a 10 -l 50000 $split_source "${split_dir}/file" 

	# Phase 4: Load 
	echo "creating load statement" 
	for file in `ls $split_dir` 
	do 
		load_target="$split_dir/$file" 
       		load_query="EXEC=TTLP_MT(file_to_string_output('$load_target'), '', '$virt_graphName', 255);" 
	        $virt_isql "$virt_port" "$virt_userName" "$virt_passWord" "$load_query" 
#		echo "$virt_isql" "$virt_port" "$virt_userName" "$virt_passWord" "$load_query" 
	done; 
	echo "done" 
else 
	echo "File is small. Loading directly." 
	load_source=$rapper_target 
	load_target=`mktemp` 

	# NOTE By default virtuoso restricts access to files to only explicitely 
	# allowed directories. By default /tmp is allowed, therefore we copy the 
	# file there. 
	cp $load_source $load_target 

	load_query="EXEC=TTLP_MT(file_to_string_output('$load_target'), '', '$virt_graphName', 255)" 
	echo "$virt_isql $virt_port $virt_userName $virt_passWord $load_query" 
	$virt_isql "$virt_port" "$virt_userName" "$virt_passWord" "$load_query" 
fi


Command: /home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/CommonFiles/virtload.sh /home/srautenberg/Public/LODProjects/FirstLIMESWorkflowExample/Datasets/dbpedia_dbpedia_duplicates.nt http://lod.unicentro.br/DBpediaLimesSample/



